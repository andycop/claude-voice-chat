server {
    listen 80;
    server_name your-domain.com localhost; # Replace your-domain.com with your actual domain or IP if needed
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name your-domain.com localhost; # Replace your-domain.com with your actual domain or IP if needed

    ssl_certificate /etc/nginx/ssl/selfsigned.crt; # Path to your SSL certificate
    ssl_certificate_key /etc/nginx/ssl/selfsigned.key; # Path to your SSL private key

    # Optional: Add recommended SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off; # Consider security implications for session resumption

    location / {
        proxy_pass http://claude-voice-chat:3000; # Assumes your app service is named 'claude-voice-chat' in docker-compose
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}
